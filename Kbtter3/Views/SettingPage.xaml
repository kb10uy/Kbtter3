<Page x:Class="Kbtter3.Views.SettingPage"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Kbtter3.Views"
        xmlns:vm="clr-namespace:Kbtter3.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="SettingPage" d:DesignHeight="600" d:DesignWidth="512"
      ShowsNavigationUI="False">

    <Page.DataContext>
        <vm:SettingPageViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary Source="KbtterResource.xaml"/>
    </Page.Resources>
    
    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        
        <!--
        <i:EventTrigger EventName="Unloaded">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        -->
        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid Background="{StaticResource TwitterColorWhite}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="128" MaxWidth="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="36"/>
        </Grid.RowDefinitions>

        <TreeView Name="TreeViewCategories" Grid.RowSpan="2" Margin="4" SelectedItemChanged="TreeViewCategories_SelectedItemChanged">
            <TreeViewItem Header="表示">
                <TreeViewItem Header="メインウィンドウ" Tag="View.MainWindow"/>
                <TreeViewItem Header="ツイート表示" Tag="View.StatusPage"/>
                <TreeViewItem Header="ユーザーページ" Tag="View.UserProfilePage"/>
            </TreeViewItem>
            <TreeViewItem Header="Kbtter3">
                <TreeViewItem Header="CK/CS" Tag="Kbtter3.Consumer"/>
            </TreeViewItem>
        </TreeView>
        <ScrollViewer CanContentScroll="False" Grid.Column="1" VerticalScrollBarVisibility="Auto">
            <Frame Name="FramePaging" NavigationUIVisibility="Hidden">
                <Frame.Template>
                    <ControlTemplate TargetType="Frame">
                        <Grid>
                            <ContentPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Frame.Template>
            </Frame>
        </ScrollViewer>
        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right">
            <Button Margin="8,4,8,4" Width="80" Command="{Binding SaveSettingCommand}">保存</Button>
        </StackPanel>

    </Grid>
</Page>
